#!/opt/local/bin/perl -w

use strict;
use Finance::QIF;
use Data::Dumper;

my $outfile = 'PruAVCs.qif';
my $infile = "Data/PruAVCs-all";

open (IN, "<$infile") or die $!;

my $out = Finance::QIF->new(file => ">" . $outfile,);
my $header = "Type:Invst";
$out->header($header);

my %monthy = ( jan => '01', feb => '02', mar => '03', 
	       apr => '04', may => '05', jun => '06',
	       jul => '07', aug => '08', sep => '09',
	       oct => '10', nov => '11', dec => '12');

# action matrix
my $action = {
	Investment => "Buy",
	Disinvestment => "Sell",
	AMC => "MiscExp",
	Contribution => "Xfr",
};

# account matrix dependent on action/description
my $account = {
	Sell => "",
	Buy => "",
	Xfr => "Salary:Paycheque",
	MiscExp => "Investment:AMC",
};

my ($total, $lastdate, $lastrecord) = (0,'none', undef);

# dispose of header
$_ = <IN>;
# data
while (<IN>) {
	# strip out currency symbol
	s/Â£\s*//g;
	unless (m/([^\t]+)\t([^\t]+)\t([^\t]+)\t([^\t]+)\t([^\t]+)\t([^\t]+)\t([^\t]+)\t([^\t\n]+)/) {
		print "Bad record: " . $_;
		next;
	}
	my $record = {
		header => $header,
		security => $1,
		memo => $4,
		action => $action->{$4},
		account => $account->{$action->{$4}},
		amount => $6,
		price => $7,
		quantity => $8,
		commission => 0,
	};
	my $date = $3;
	my $description = $5;

	# translate the date
	$date =~ /(\d{2})\s+(\w{3})\s+(\d{4})/;
	$record->{date} = $3 . '/' . $monthy{lc($2)} . '/' . $1;

	# have we changed date after a series of Buy transactions?
	if ($total && defined $lastrecord &&
	    $lastrecord->{date} ne $record->{date}) {
#		print Dumper($lastrecord);
#		print $total . ' @ ' . $lastrecord->{date} . "\n";
		# write out consolidated xfr
	    	$out->write($lastrecord);
		$total = 0;
	}

	# write out the fund transaction
	$out->write($record);

	if ($description eq "AMC") {
		# need an expense too...
		$record->{action} = $action->{$description};
		$record->{memo} = $description;
		$record->{account} = $account->{$record->{action}};
		# write out the expense transaction
#		print Dumper($record);
		$out->write($record);
	# don't need a check for $lastrecord being defined as
	# only case is when $total = 0 
	} elsif ((!$total || $record->{date} eq $lastrecord->{date}) && 
		 $description eq "Contribution") {
		$total += $record->{amount};
#		print $total . "\n";
		$record->{action} = $action->{$description};
		$record->{memo} = $description;
		$record->{account} = $account->{$record->{action}};
		$record->{amount} = $total;
		delete $record->{security};
		delete $record->{price};
		delete $record->{quantity};
		# store for next time...
		$lastrecord = $record;
	}
}

# have we changed date after a series of Buy transactions?
if ($total) {
#	print $lastrecord->{date} . ':' . $total . " (write)\n";
    	$out->write($lastrecord);
}

$out->close;
close IN;
